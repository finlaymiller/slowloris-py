import psutil as psu
from collections import namedtuple
import helper_functions as hf


def get_cpu():
	# Attribute names for each namedtuple generated by psutil.
	# Not all are used but it is helpful to have them written out here.
	time_attribs = ['user', 'system', 'idle']
	perc_attribs = 'percent'

	time = psu.cpu_times()[:3]
	perc = psu.cpu_percent(interval=1)

	give_names = namedtuple('cpu_time_NT', time_attribs)
	dict_time = give_names(*time)._asdict()
	dict_perc = {perc_attribs: perc}

	return dict_time, dict_perc


def get_mem():
	# Attribute names for each namedtuple generated by psutil.
	# Not all are used but it is helpful to have them written out here.
	swap_attribs = ['total', 'used', 'free', 'percent']
	virt_attribs = ['total', 'avail', 'used', 'free', 'active', 'inactive',
					'buffers', 'cached', 'shared', 'slab', 'wired']

	swap = psu.swap_memory()[:4]
	virt = psu.virtual_memory()

	give_names = namedtuple('mem_swap_NT', swap_attribs)
	dict_swap = give_names(*swap)._asdict()
	dict_virt = virt._asdict()

	return dict_swap, dict_virt


def get_dsk():
	# Attribute names for each namedtuple generated by psutil.
	# Not all are used but it is helpful to have them written out here.
	usage_attribs = ['total', 'used', 'free', 'percent']
	dskio_attribs = ['read_count', 'write_count', 'read_bytes', 'write_bytes']

	usage = psu.disk_usage('/')
	dskio = psu.disk_io_counters(nowrap=True)

	dict_usage = usage._asdict()
	dict_dskio = dskio._asdict()

	return dict_usage, dict_dskio


def get_nwk():
	# Attribute names for each namedtuple generated by psutil.
	# Not all are used but it is helpful to have them written out here.
	counters= ['bytes_sent', 'bytes_recv', 'packets_sent',
				'packets_recv', 'errin', 'errout', 'dropin', 'dropout']
	sockets = ['fd', 'family', 'type', 'laddr', 'raddr', 'status', 'pid']

	cntrs = psu.net_io_counters(nowrap=True)
	sckts = psu.net_connections()

	dict_cntrs = cntrs._asdict()
	dict_sckts = sckts._asdict()

	return dict_cntrs, dict_sckts


# def get_tmp():
# 	temp = psu.sensors_temperatures()
# 	return temp


def main():
	cpu_time, cpu_percent = get_cpu()
	mem_virtual, mem_swap = get_mem()
	dsk_usage, dsk_io = get_dsk()
	# temperature = get_tmp()

	print(cpu_percent)
	print(cpu_time)
	print(mem_swap)
	print(mem_virtual)
	print(dsk_usage)
	print(dsk_io)
	# print(temperature)
	x = (cpu_time, cpu_percent, mem_swap, mem_virtual, dsk_io, dsk_usage)



if __name__ == '__main__':
	main()

# {'percentage': 4.0}
# OrderedDict([('user', 6826.45), ('system', 1490.86), ('idle', 3140.58)])
# OrderedDict([('total', 454496256), ('available', 292483072), ('percent', 35.6), ('used', 99962880), ('free', 67002368), ('active', 215482368), ('inactive', 131362816), ('buffers', 71946240), ('cached', 215584768), ('shared', 6365184), ('slab', 26955776)])
# OrderedDict([('total', 104853504), ('used', 1572864), ('free', 103280640), ('percent', 1.5)])
# OrderedDict([('total', 31280320512), ('used', 4370661376), ('free', 25571790848), ('percent', 14.6)])
# OrderedDict([('read_count', 9041), ('write_count', 265974), ('read_bytes', 318769152), ('write_bytes', 1740948480), ('read_time', 34040), ('write_time', 10010650), ('read_merged_count', 6422), ('write_merged_count', 78554), ('busy_time', 885060)])
# {'cpu-thermal': [shwtemp(label='', current=41.16, high=None, critical=None)]}
